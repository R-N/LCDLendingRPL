/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lcdrpl.gui.lefttab;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.List;
import lcdrpl.MainFrame;

/**
 *
 * @author Lenovo2
 */
public class LeftTabPanel extends javax.swing.JPanel {
    private MainFrame parent;
    boolean detailVisible = false;
    /**
     * Creates new form LeftTabPanel
     */
    List<TabButton> tabs = new ArrayList<TabButton>();
    
    public LeftTabPanel() {
        initComponents();
        setDetailVisible(false);
    }
    public void setHeaderDetailVisible(boolean visible){
        headerDetailPanel.setVisible(visible);
    }
    
    public void onClick(TabButton tabButton){
        //System.out.println("Clicked tab " + tabs.indexOf(tabButton));
        if(parent != null) parent.onMenuClick(tabs.indexOf(tabButton));
    }
    
    public void setDetailVisible(boolean visible){
        detailVisible = visible;
        setHeaderDetailVisible(visible);
        for(TabButton tab : tabs){
            tab.setDetailVisible(visible);
        }
    }
    
    public void setParent(MainFrame parent){
        this.parent = parent;
    }
    
    public void addTab(TabButton tab){
        tab.setParent(this);
        tabs.add(tab);
        tab.setDetailVisible(detailVisible);
        
        for(MouseListener ml : this.getMouseListeners()){
            tab.addMouseListener(ml);
        }
    }

    @Override
    public void add(Component comp, Object constraints){
        super.add(comp, constraints);
        if(comp instanceof TabButton){
            addTab((TabButton)comp);
        }
    }
    
    @Override
    public void remove(Component comp){
        if(comp instanceof TabButton){
            tabs.remove((TabButton)comp);
        }
        super.remove(comp);
    }
    
    public int getHeaderHeight(){
        return headerPanel.getHeight();
    }
    
    public void setHeaderHeight(int height){
        headerPanel.setPreferredSize(new Dimension(headerPanel.getPreferredSize().width, height));
        headerPanel.setSize(headerPanel.getPreferredSize());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        headerPanel = new javax.swing.JPanel();
        imageLabel1 = new lcdrpl.gui.ImageLabel();
        headerDetailPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0));
        homeButton = new lcdrpl.gui.lefttab.TabButton();
        borrowButton = new lcdrpl.gui.lefttab.TabButton();
        lendingHistoryButton = new lcdrpl.gui.lefttab.TabButton();
        itemButton = new lcdrpl.gui.lefttab.TabButton();
        blacklistButton = new lcdrpl.gui.lefttab.TabButton();
        exitButton = new lcdrpl.gui.lefttab.TabButton();
        imageLabel2 = new lcdrpl.gui.ImageLabel();

        setBackground(new java.awt.Color(83, 69, 107));
        setForeground(new java.awt.Color(102, 102, 102));
        setMinimumSize(new java.awt.Dimension(64, 128));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });
        setLayout(new java.awt.GridBagLayout());

        headerPanel.setBackground(new java.awt.Color(93, 79, 103));
        headerPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        headerPanel.setLayout(new java.awt.GridBagLayout());

        imageLabel1.setPreferredSize(new java.awt.Dimension(32, 32));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        headerPanel.add(imageLabel1, gridBagConstraints);

        headerDetailPanel.setOpaque(false);
        headerDetailPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        headerDetailPanel.add(jLabel1, gridBagConstraints);

        jLabel2.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        headerDetailPanel.add(jLabel2, gridBagConstraints);

        headerPanel.add(headerDetailPanel, new java.awt.GridBagConstraints());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        headerPanel.add(filler2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(headerPanel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(homeButton, gridBagConstraints);
        homeButton.setText("Beranda");
        homeButton.setNormalIcon("Beranda-normal.png");
        homeButton.setHoverIcon("Beranda-hover.png");
        homeButton.setPressedIcon("Beranda-clicked.png");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(borrowButton, gridBagConstraints);
        borrowButton.setText("Pinjam");

        borrowButton.setNormalIcon("Peminjaman-normal.png");
        borrowButton.setHoverIcon("Peminjaman-hover.png");
        borrowButton.setPressedIcon("Peminjaman-clicked.png");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(lendingHistoryButton, gridBagConstraints);
        lendingHistoryButton.setText("Riwayat");

        lendingHistoryButton.setNormalIcon("History-normal.png");
        lendingHistoryButton.setHoverIcon("History-hover.png");
        lendingHistoryButton.setPressedIcon("History-clicked.png");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(itemButton, gridBagConstraints);
        itemButton.setText("Persediaan");

        itemButton.setNormalIcon("Peminjaman-normal.png");
        itemButton.setHoverIcon("Peminjaman-hover.png");
        itemButton.setPressedIcon("Peminjaman-clicked.png");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(blacklistButton, gridBagConstraints);
        blacklistButton.setText("Blacklist");

        blacklistButton.setNormalIcon("Block-normal.png");
        blacklistButton.setHoverIcon("Block-hover.png");
        blacklistButton.setPressedIcon("Block-clicked.png");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(exitButton, gridBagConstraints);
        exitButton.setText("Exit");

        exitButton.setNormalIcon("Logout-normal.png");
        exitButton.setHoverIcon("Logout-hover.png");
        exitButton.setPressedIcon("Logout-clicked.png");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        add(imageLabel2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
        setDetailVisible(true);
    }//GEN-LAST:event_formMouseEntered

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        // TODO add your handling code here:
        setDetailVisible(false);
    }//GEN-LAST:event_formMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private lcdrpl.gui.lefttab.TabButton blacklistButton;
    private lcdrpl.gui.lefttab.TabButton borrowButton;
    private lcdrpl.gui.lefttab.TabButton exitButton;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JPanel headerDetailPanel;
    private javax.swing.JPanel headerPanel;
    private lcdrpl.gui.lefttab.TabButton homeButton;
    private lcdrpl.gui.ImageLabel imageLabel1;
    private lcdrpl.gui.ImageLabel imageLabel2;
    private lcdrpl.gui.lefttab.TabButton itemButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private lcdrpl.gui.lefttab.TabButton lendingHistoryButton;
    // End of variables declaration//GEN-END:variables
}
